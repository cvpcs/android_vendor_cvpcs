#!/bin/bash
#
# SignAPK
# Wraps the SignAPK jar file used to sign APK/OTA files
#
# Copyright (C) 2010 Austen Dicken (cvpcs)
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
# NOTE: A lot of this is borrowed from Cyanogen's SQUISHER and OPTICHARGER
#       scripts, without which I would not have been able to figure out how
#       to elegently perform these updates

# set our out target host location
OUT_TARGET_HOST=$(uname -a | grep "Darwin")
if [ -z "${OUT_TARGET_HOST}" ] ; then
    OUT_TARGET_HOST="linux-x86"
    MD5="md5sum"
else
    OUT_TARGET_HOST="darwin-x86"
    MD5="md5"
fi

APK="$1"
KEY="$2"

if [ -z "${APK}" -o ! -e "${APK}" -o -z "${KEY}" ] ; then
    echo "Usage:"
    echo "  $0 apkfile key"
    exit 1
fi

# back up the original
echo "Backing up: [${APK}]"
mv "${APK}" "${APK}.bak"

# time for signing!
echo "Signing: [${APK}]"
java -Xmx2048m \
    -jar "${ANDROID_BUILD_TOP}/out/host/${OUT_TARGET_HOST}/framework/signapk.jar" \
    -w "${ANDROID_BUILD_TOP}/build/target/product/security/${KEY}.x509.pem" \
    "${ANDROID_BUILD_TOP}/build/target/product/security/${KEY}.pk8" \
    "${APK}.bak" "${APK}"
